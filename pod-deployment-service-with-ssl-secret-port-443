1. scenario:
Create a pod named “web” using image nginx:1.11.9-alpine, on ports 80 and 443
-->
$ kubectl config get-contexts /** check for asked context.
/** do a dry run and then add ports later in the yaml as below.
/** ports:
/**  - containerPort: 80
/**  - containerPort: 443
$ kubectl run web -n ckap --image=nginx:1.11.9-alpine --restart=Never --dry-run -o=yaml >> web.yaml
$vi web.yaml
----------
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: web
  name: web
spec:
  containers:
  - image: nginx:1.11.9-alpine
    name: web
    resources: {}
    ports:
     - containerPort: 80
     - containerPort: 443
  dnsPolicy: ClusterFirst
  restartPolicy: Never
status: {}

--------
$ curl http://<service-ip>
$ curl -k https://<service-ip> /** fails to connect to service. k is used to avoid error due to self-signed cert.
/** This does not mean that the service will run on 443, we need to provide a ssl cert.


Let's enable port 443 by adding a ssl cert, then mounting the secret as volume to the pod.
from kubernetes.io/docs
/** create secret in same namespace

$ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout tmp/nginx.key -out tmp/nginx.crt -subj "/CN=my-nginx/O=my-nginx"
$ cat nginx.crt |base64 -w 0
$ cat nginx.key |base64 -w 0
$ vi web-secret.yaml
----
apiVersion: "v1"
kind: "Secret"
metadata:
  name: "nginxsecret"
  namespace: "ckap"
type: kubernetes.io/tls
data:
 tls.crt: "aasdasdasdasdasd....."
 tls.key: "zxfsadsdfsdfsdfsdf..."
 
 ------
$ kubectl apply -f web-secret.yaml

------
actually get a pod to work on https-- add certs plus a default.conf file as volume mounts.
-- https://github.com/kubernetes/examples/blob/master/staging/https-nginx/default.conf

kubectl create configmap nginxconfigmap --from-file=default.conf -n ckap
* read more on configMap, and mounting a volume to pod.
------
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: web-secure
  name: web-secure
spec:
  containers:
  - image: nginx:1.11.9-alpine
    name: web-secure
    resources: {}
    ports:
     - containerPort: 80
     - containerPort: 443
    volumeMounts:
     - name: secret-volume
       mountPath: /etc/nginx/ssl
     - name: nginxconfig-volume
       mountPath: /etc/nginx/conf.d
  volumes:
   - name: secret-volume
     secret:
      secretName: nginxsecret
   - name: nginxconfig-volume
     configMap:
       name: nginxconfigmap
  dnsPolicy: ClusterFirst
  restartPolicy: Never
status: {}

------
/** execute below command to attach to a running container.
$ kubectl exec --stdin --tty shell-demo -- /bin/bash

